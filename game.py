import random
from aiogram.types import Message, CallbackQuery, InlineKeyboardMarkup, InlineKeyboardButton
from aiogram import Router
from aiogram.fsm.state import State, StatesGroup
from aiogram.fsm.context import FSMContext


router_game = Router()


class Game(StatesGroup):
    waiting_for_number = State()
    waiting_for_result = State()


@router_game.callback_query(lambda c: c.data == 'game_start')
async def game_start_func(callback_query: CallbackQuery):
    await callback_query.message.edit_reply_markup(reply_markup=None)
    bot_num = random.randint(1, 6)
    print(bot_num)
    nums_list = ['', '1Ô∏è‚É£','2Ô∏è‚É£','3Ô∏è‚É£', '4Ô∏è‚É£', '5Ô∏è‚É£', '6Ô∏è‚É£']
    bot_number_str = nums_list[bot_num]
    button = InlineKeyboardButton(text='–ë—Ä–æ—Å–∏—Ç—å –∫–æ—Å—Ç—å', callback_data=f'game_step_{bot_num}')
    keyboard = InlineKeyboardMarkup(inline_keyboard=[[button]])
    await callback_query.message.answer(bot_number_str)
    await callback_query.message.answer('–ë—Ä–æ—Å–∞–π—Ç–µ, –¥—É–º–∞—é —É –≤–∞—Å –±–æ–ª—å—à–µ üôà',
                                        reply_markup=keyboard)


@router_game.callback_query(lambda c: c.data.startswith('game_step_'))
async def game_step_func(callback_query: CallbackQuery):
    await callback_query.message.edit_reply_markup(reply_markup=None)
    bot_num = callback_query.data.split('_')[2]
    user_number = random.randint(1, 6)
    nums_list = ['', '1Ô∏è‚É£','2Ô∏è‚É£','3Ô∏è‚É£', '4Ô∏è‚É£', '5Ô∏è‚É£', '6Ô∏è‚É£']

    button = InlineKeyboardButton(text='–ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –µ—â–µ', callback_data='game_start')
    keyboard = InlineKeyboardMarkup(inline_keyboard=[[button]])
    await callback_query.message.answer(nums_list[user_number])
    if int(bot_num) < user_number:
        await callback_query.message.answer('üéâü•≥ –ú–æ–∏ –ø–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏—è, –≤—ã –ø–æ–±–µ–¥–∏—Ç–µ–ª—å, —Å–µ–≥–æ–¥–Ω–µ—à–Ω–∏–π –ø—Ä–æ–º–æ–∫–æ–¥:'
                                            ' –†–ê–ö–ê–ú–ê–ö–ê–§–û–õ\n–°–∫–∞–∂–∏—Ç–µ –µ–≥–æ —É –Ω–∞—Å –≤ —Å–µ—Ä–≤–∏—Å–µ –∏ –≤–∞–º –±—É–¥–µ—Ç —Å–∫–∏–¥–∫–∞'
                                            ' –≤ —Ä–∞–∑–º–µ—Ä–µ <<<9,99 üôÄ>>>')
    else:
        await callback_query.message.answer('–£ –≤–∞—Å –µ—â–µ –µ—Å—Ç—å N –ø–æ–ø—ã—Ç–æ–∫, –¥–∞–≤–∞–π—Ç–µ –ø–æ–ø—Ä–æ–±—É–µ–º –µ—â–µ',
                                            reply_markup=keyboard)


# user_accept = input('–ù–∞–∂–º–∏—Ç–µ –¥–∞ –µ—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ —Å—ã–≥—Ä–∞—Ç—å\n'
#                     '–∏–ª–∏ –≤–ø–∏—à–∏—Ç–µ —á—Ç–æ —É–≥–æ–¥–Ω–æ –¥–ª—è –æ—Ç–º–µ–Ω—ã : ')
# if user_accept == '–¥–∞':
#     bot_number = random.randint(1, 6)
#     user_number = random.randint(1, 6)
#     print(f'–ß–∏—Å–ª–æ –±–æ—Ç–∞ {bot_number}\n–í–∞—à–µ —á–∏—Å–ª–æ {user_number}')
#     print('–í—ã –≤—ã–π–≥—Ä–∞–ª–∏ —Å–∫–∏–¥–∫—É 10–∑–ª' if bot_number < user_number else '–ü–æ–≤–µ–∑–µ—Ç –≤ –¥—Ä—É–≥–æ–π —Ä–∞–∑')
# else:
#     print('–í–æ–∑–≤—Ä–∞—â–∞–π—Ç–µ—Å—å –∫–æ–≥–¥–∞ –ø–µ—Ä–µ–¥—É–º–∞–µ—Ç–µ')